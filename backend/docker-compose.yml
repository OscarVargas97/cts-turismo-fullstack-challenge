services:
  web:
    build:
      context: .
      dockerfile: Dockerfile
      target: dev
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started

  db:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: ${PG_DATABASE_NAME}
      POSTGRES_USER: ${PG_DATABASE_USER}
      POSTGRES_PASSWORD: ${PG_DATABASE_PASSWORD}
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${PG_DATABASE_USER}" ]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - pgdata:/var/lib/postgresql/data

  redis:
    image: redis:6
    command: ["redis-server", "--requirepass", "${REDIS_PASSWORD}"]
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

  celery:
    build:
      context: .
      dockerfile: Dockerfile
      target: base
    command: [
      "celery", "-A", "app", "worker", "-c", "1", "-l", "INFO",
      "--without-heartbeat", "--without-gossip", "--without-mingle"
    ]
    env_file: .env
    environment:
      - DJANGO_SETTINGS_MODULE=app.settings.dev
      - DJANGO_WSGI=app.wsgi
      - DEBUG=False
    volumes:
      - ${PWD}/src:/app
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started

  cloudbeaver:
    image: dbeaver/cloudbeaver:latest
    ports:
      - "8080:8978"
    environment:
      CB_SERVER_NAME: "CloudBeaver"
    volumes:
      - cloudbeaver_data:/opt/cloudbeaver/workspace

volumes:
  pgdata:
  cloudbeaver_data:
  redis_data:
